import {
  Blockfrost,
  fromUnit,
  Koios,
  Lucid,
  paymentCredentialOf,
  scriptFromNative,
} from "@lucid-evolution/lucid";
import { lockNFT } from "./endpoints/lockNFT.js";
import { NFTMinter } from "./endpoints/NFTMinter.js";
import dotenv from "dotenv"
dotenv.config()
export * from "./endpoints/lockNFT.js"

const nftMarketPlace =
  "5903de010000323232323232322323232232253330083232533300a3008300b3754002264a666016601260186ea80184c8cc88c8c8c94ccc044c038c048dd500109919299980b180c991980080080211299980c0008a5eb804c8c94ccc05d4ccc05ccdd79806180c9baa002374c00a2a66602e66ebcc03cc064dd5001005099baf301c301d301d3019375400466e9520043301b37526e50dd980325eb805280a5013301b00233004004001133004004001301c002301a00114a22ca666024602000c297adef6c6013232330010014bd6f7b63011299980c00089980c99bb04c1014000374c00697adef6c6013232323253330193372091010000213301d337609801014000374c00e00a2a66603266e3d2210000213301d337609801014000374c00e00626603a66ec0dd48011ba600133006006003375660340066eb8c060008c070008c068004c8cc0040052f5bded8c044a66602e00226603066ec13001014000375001097adef6c6013232323253330183372091010000213301c337609801014000375001800a2a66603066e3d2210000213301c337609801014000375001800626603866ec0dd48011ba800133006006003375a60320066eb8c05c008c06c008c064004c058c04cdd50010b1bac30153016301630123754602a0046028602a00260206ea801cdd6980098071baa00b3004300e3754016460226024002264660020026eb0c044c048c048c048c048c048c048c048c048c038dd5180218071baa00522533301000114a0264a66601c66e3cdd718098010020a511330030030013013001375c601e60186ea800458c004c02cdd5180098059baa0082300e00114984d958c94ccc01cc01400454ccc028c024dd50010a4c2c2a66600e60080022a66601460126ea800852616163007375400264a66600a6006600c6ea80104c8c8c8c94ccc030c03c0084c92653330093007300a3754006264646464a66602060260042646493192999807980680089919299980a180b80109924c64a666024602000226464a66602e60340042649318080008b180c000980a1baa00215333012300f0011323232323232533301b301e002149858dd6980e000980e0011bad301a001301a002375a603000260286ea800858c048dd50008b180a80098089baa0031533300f300c00115333012301137540062930b0b18079baa00230090031630110013011002300f001300b37540062c2c6eb4c034004c034008c02c004c01cdd50020b1192999803180200089919299980598070010a4c2c6eb8c030004c020dd50010a999803180180089919299980598070010a4c2c6eb8c030004c020dd50010b18031baa001370e90011b87480015cd2ab9d5573caae7d5d02ba157441";

const network = process.env.NETWORK
console.log(network)

const user1 = await Lucid(
  new Koios("https://preprod.koios.rest/api/v1"), // Provider
  "Preprod"
);

// create an account
// get the private key from the website
// const user1Blockfrost = await Lucid(
//   new Blockfrost("block_url", "private_key"), // Provider
//   "Preprod"
// );

user1.selectWallet.fromSeed(
  "mule quit evil loyal hamster finish plastic tattoo walk grace above bring swing fiction cook corn unusual coral decade poverty lake state lift shrug"
);

// console.log(await user1.wallet().getUtxos());
const user1Addr = await user1.wallet().address();
const tokenInfo = fromUnit(
  "10ec70032c24b622e11d95eb1eebb703bca6779815b57c519c7479584275726e61626c65546f6b656e" // policy_id + token_name(hex)
);
// const minted = await NFTMinter({
//   lucid: user1,
//   TokenName: "BurnableToken",
//   address: user1Addr,
// });
// console.log(minted)

try {
  const myTx = await lockNFT({
    lucid: user1,
    priceOfAsset: 10_000_000n,
    policyID: tokenInfo.policyId,
    TokenName: tokenInfo.assetName!,
    marketPlace: nftMarketPlace,
  });
  console.log(myTx);
} catch (error) {
  //@ts-ignore
  console.log(error.message);
}
